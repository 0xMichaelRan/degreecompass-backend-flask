import requests

# Example list of major IDs
major_ids = [
    "major_id",
    "010101",
    "010102",
    "010103K",
    "010104T",
    "020101",
    "020102",
    "020103T",
    "020104T",
    "020105T",
    "020106T",
    "020211K",
    "020212",
    "020301K",
    "020302",
    "020303",
    "020304",
    "020305T",
    "020306T",
    "020307T",
    "020401",
    "020402",
    "030101K",
    "030102T",
    "030103T",
    "030201",
    "030202",
    "030203",
    "030204T",
    "030205T",
    "030301",
    "030302",
    "030303T",
    "030304T",
    "030305T",
    "030401",
    "030501",
    "030502",
    "030503",
    "030601K",
    "030602K",
    "030603K",
    "030604TK",
    "030605TK",
    "030606TK",
    "030607TK",
    "030608TK",
    "030610TK",
    "030611TK",
    "030612TK",
    "030613TK",
    "030614TK",
    "030615TK",
    "040101",
    "040102",
    "040103",
    "040104",
    "040105",
    "040106",
    "040107",
    "040108",
    "040109T",
    "040201",
    "040202K",
    "040203",
    "040204K",
    "040205",
    "040206T",
    "040207T",
    "040211TK",
    "050101",
    "050102",
    "050103",
    "050104",
    "050105",
    "050106T",
    "050107T",
    "050201",
    "050202",
    "050203",
    "050204",
    "050205",
    "050206",
    "050207",
    "050208",
    "050209",
    "050210",
    "050211",
    "050212",
    "050213",
    "050214",
    "050215",
    "050216",
    "050217",
    "050218",
    "050219",
    "050220",
    "050221",
    "050222",
    "050223",
    "050224",
    "050225",
    "050226",
    "050227",
    "050228",
    "050229",
    "050230",
    "050231",
    "050232",
    "050233",
    "050234",
    "050235",
    "050236",
    "050237",
    "050238",
    "050239",
    "050240",
    "050241",
    "050242",
    "050243",
    "050244",
    "050245",
    "050246",
    "050247",
    "050248",
    "050249",
    "050250",
    "050251",
    "050252",
    "050253",
    "050254",
    "050255",
    "050256",
    "050257",
    "050258",
    "050259",
    "050260",
    "050261",
    "050262",
    "050301",
    "050302",
    "050303",
    "050304",
    "050305",
    "050306T",
    "050307T",
    "060101",
    "060102",
    "060103",
    "060104",
    "060105T",
    "060106T",
    "070101",
    "070102",
    "070103T",
    "070201",
    "070202",
    "070203",
    "070204T",
    "070301",
    "070302",
    "070303T",
    "070304T",
    "070401",
    "070501",
    "070502",
    "070503",
    "070504",
    "070601",
    "070602",
    "070701",
    "070702",
    "070703T",
    "070704T",
    "070801",
    "070802",
    "070901",
    "070902",
    "070903T",
    "070904T",
    "071001",
    "071002",
    "071003",
    "071004",
    "071101",
    "071102",
    "071201",
    "071202",
    "080101",
    "080102",
    "080201",
    "080202",
    "080203",
    "080204",
    "080205",
    "080206",
    "080207",
    "080208",
    "080209T",
    "080211T",
    "080212T",
    "080301",
    "080401",
    "080402",
    "080403",
    "080404",
    "080405",
    "080406",
    "080407",
    "080408",
    "080409T",
    "080410T",
    "080411T",
    "080412T",
    "080413T",
    "080414T",
    "080501",
    "080502T",
    "080503T",
    "080601",
    "080602T",
    "080603T",
    "080604T",
    "080701",
    "080702",
    "080703",
    "080704",
    "080705",
    "080706",
    "080707T",
    "080708T",
    "080709T",
    "080710T",
    "080711T",
    "080712T",
    "080713T",
    "080714T",
    "080715T",
    "080716T",
    "080801",
    "080802T",
    "080901",
    "080902",
    "080903",
    "080904K",
    "080905",
    "080906",
    "080907T",
    "080908T",
    "080909T",
    "081001",
    "081002",
    "081003",
    "081004",
    "081005T",
    "081006T",
    "081007T",
    "081008T",
    "081010T",
    "081101",
    "081102",
    "081103",
    "081104T",
    "081201",
    "081202",
    "081203T",
    "081204T",
    "081301",
    "081302",
    "081303T",
    "081304T",
    "081305T",
    "081401",
    "081402",
    "081403",
    "081404T",
    "081501",
    "081502",
    "081503",
    "081504",
    "081505T",
    "081506T",
    "081601",
    "081602",
    "081603T",
    "081604T",
    "081701",
    "081702",
    "081703",
    "081801",
    "081802",
    "081803K",
    "081804K",
    "081805K",
    "081806T",
    "081807T",
    "081808TK",
    "081901",
    "081902T",
    "081903T",
    "082001",
    "082002",
    "082003",
    "082004",
    "082005",
    "082006T",
    "082007T",
    "082101",
    "082102",
    "082103",
    "082104",
    "082105",
    "082106",
    "082107",
    "082201",
    "082202",
    "082203",
    "082204",
    "082301",
    "082302",
    "082303",
    "082304",
    "082305",
    "082401",
    "082402",
    "082403",
    "082501",
    "082502",
    "082503",
    "082504",
    "082505T",
    "082506T",
    "082507T",
    "082601",
    "082602T",
    "082603T",
    "082604T",
    "082701",
    "082702",
    "082703",
    "082704",
    "082705",
    "082706T",
    "082707T",
    "082708T",
    "082801",
    "082802",
    "082803",
    "082804T",
    "082901",
    "083001",
    "083002T",
    "083101K",
    "083102K",
    "083103TK",
    "083104TK",
    "083105TK",
    "083106TK",
    "083107TK",
    "083108TK",
    "083109TK",
    "090101",
    "090102",
    "090103",
    "090104",
    "090105",
    "090106",
    "090107T",
    "090108T",
    "090109T",
    "090110T",
    "090111T",
    "090201",
    "090202",
    "090203",
    "090301",
    "090302T",
    "090303T",
    "090401",
    "090402",
    "090403T",
    "090501",
    "090502",
    "090503",
    "090601",
    "090602",
    "090603T",
    "090604TK",
    "090701",
    "100101K",
    "100201K",
    "100202TK",
    "100203TK",
    "100204TK",
    "100205TK",
    "100206TK",
    "100207TK",
    "100301K",
    "100401K",
    "100402",
    "100403TK",
    "100404TK",
    "100405TK",
    "100501K",
    "100502K",
    "100503K",
    "100504K",
    "100505K",
    "100506K",
    "100507K",
    "100601K",
    "100701",
    "100702",
    "100703TK",
    "100704T",
    "100705T",
    "100706T",
    "100707T",
    "100801",
    "100802",
    "100803T",
    "100804T",
    "100805T",
    "100901K",
    "101001",
    "101002",
    "101003",
    "101004",
    "101005",
    "101006",
    "101007",
    "101008T",
    "101101",
    "120101",
    "120102",
    "120103",
    "120104",
    "120105",
    "120106TK",
    "120210",
    "120211K",
    "120211T",
    "120212",
    "120212T",
    "120213K",
    "120213T",
    "120214",
    "120214T",
    "120215",
    "120216",
    "120217",
    "120218",
    "120219",
    "120301",
    "120302",
    "120401",
    "120402",
    "120403",
    "120404",
    "120405",
    "120406TK",
    "120407T",
    "120408T",
    "120409T",
    "120501",
    "120502",
    "120503",
    "120601",
    "120602",
    "120603T",
    "120701",
    "120702T",
    "120703T",
    "120801",
    "120802T",
    "120901K",
    "120902",
    "120903",
    "120904T",
    "130101",
    "130201",
    "130202",
    "130203",
    "130204",
    "130205",
    "130206",
    "130301",
    "130302",
    "130303",
    "130304",
    "130305",
    "130306",
    "130307",
    "130308",
    "130309",
    "130310",
    "130311T",
    "130401",
    "130402",
    "130403",
    "130404",
    "130405T",
    "130406T",
    "130407TK",
    "130501",
    "130502",
    "130503",
    "130504",
    "130505",
    "130506",
    "130507",
    "130508",
    "130509T",
]

# Run this script to fetch all QAs and intros for all majors

def get_major_intro_and_qa(major_ids):
    for major_id in major_ids:
        # Fetch intro information from the API
        intro_response = requests.get(
            f"http://localhost:3458/api/majors/{major_id}/intro"
        )
        if intro_response.status_code != 200:
            print(
                f"Error fetching intro for major ID {major_id}: {intro_response.status_code}"
            )
            continue
        else:
            intro_data = intro_response.json().get("data", {})
            intro = intro_data.get("intro_content", "No intro available.")

        # Fetch QA information from the API
        qa_response = requests.get(f"http://localhost:3458/api/majors/{major_id}/qa")
        if qa_response.status_code != 200:
            print(
                f"Error fetching QA for major ID {major_id}: {qa_response.status_code}"
            )
            continue
        else:
            qa_list = qa_response.json()

        # Output the results
        print(f"Major ID: {major_id}")
        print("Intro:")
        print(intro)

        if qa_list:
            print("QA:")
            for qa in qa_list:
                question = qa.get("question", "No question available.")
                answer = qa.get("answer", "No answer available.")
                print(f"Q: {question}")
                print(f"A: {answer}")
        else:
            print("No QA available.")

        print("\n" + "-" * 40 + "\n")


# Run the function
get_major_intro_and_qa(major_ids)
